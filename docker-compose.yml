version: "3.9"

services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfiles/backend/Dockerfile
      args:
        - DEV=true
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app
      - dev-static-data:/vol/web
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    environment:
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
#      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_ALLOWED_CORS=${DJANGO_ALLOWED_CORS}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DEBUG=1
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - LINKEDIN_REDIRECT_URI=${LINKEDIN_REDIRECT_URI}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_REDIRECT_URI=${REDDIT_REDIRECT_URI}
      - REDDIT_STATE=${REDDIT_STATE}
      - REDDIT_SCOPE=${REDDIT_SCOPE}
      - MAILGUN_SECRET=${MAILGUN_SECRET}
    depends_on:
      - db

  node-frontend:
    container_name: node-frontend
    build:
      context: .
      dockerfile: Dockerfiles/frontend/Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./reposter-react/src:/apps/reposter-react/src
      - node_modules:/reposter-react/node_modules
  # TODO: will need to add env values when I add front end testing
  #    env_file:
  #        - reposter-react/.env

  db:
    image: postgres:16.2-alpine
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=app_db
      - POSTGRES_USER=app_db_user
      - POSTGRES_PASSWORD=app_db_password

volumes:
  db_data:
  dev-static-data:
  node_modules: