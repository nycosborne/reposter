version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfiles/backend/Dockerfile
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    depends_on:
      - db

  node-frontend:
    container_name: node-frontend
    build:
      context: .
      dockerfile: Dockerfiles/frontend/Dockerfile.deploy
    ports:
      - "3000:3000"
    volumes:
      - ./reposter-react/src:/apps/reposter-react/src

  db:
    image: postgres:16.2-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  proxy:
    build:
      context: ./proxy
    restart: always
    depends_on:
      - app
    ports:
#      TODO change back to 80
      - "8000:8000"
    volumes:
      - static-data:/vol/static

volumes:
  postgres-data:
  static-data: