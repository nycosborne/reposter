version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfiles/backend/Dockerfile
    restart: always
    volumes:
      - static-data:/vol/web
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - SECRET_KEY=${DJANGO_SECRET_KEY}
      - ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DJANGO_ALLOWED_CORS=${DJANGO_ALLOWED_CORS}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      - CLIENT_ID=${CLIENT_ID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - LINKEDIN_REDIRECT_URI=${LINKEDIN_REDIRECT_URI}
    depends_on:
      - db

  db:
    image: postgres:16.2-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}

  proxy:
    build:
      context: .
      dockerfile: proxy/Dockerfile
    restart: always
    depends_on:
      - app
    ports:
      - "80:8000"
    volumes:
      - static-data:/vol/static
    env_file:
      - reposter-react/.env

volumes:
  postgres-data:
  static-data: