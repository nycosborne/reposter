---
name: Checks

on:
  push:
    branches:
      - beta

jobs:
  test-lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    env:
      CLIENT_ID: ${{ secrets.CLIENT_ID }}
      CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      LINKEDIN_REDIRECT_URI: ${{ secrets.LINKEDIN_REDIRECT_URI }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DJANGO_ALLOWED_CORS: ${{ secrets.DJANGO_ALLOWED_CORS }}
      DJANGO_ALLOWED_HOSTS: ${{ secrets.DJANGO_ALLOWED_HOSTS }}
      REDDIT_CLIENT_ID : ${{ secrets.REDDIT_CLIENT_ID }}
      REDDIT_CLIENT_SECRET : ${{ secrets.REDDIT_CLIENT_SECRET }}
      REDDIT_REDIRECT_URI : ${{ secrets.REDDIT_REDIRECT_URI }}
      REDDIT_STATE : ${{ secrets.REDDIT_STATE }}
      REDDIT_SCOPE : ${{ secrets.REDDIT_SCOPE }}
    steps:
      - name: Login to dockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
      - name: Test
        run: docker-compose run --rm app sh -c "python manage.py wait_for_db && python manage.py test"
      - name: Lint-Python
        run: docker-compose run --rm app sh -c "flake8"
      - name: Lint-React
        run: docker-compose run --rm node-frontend sh -c "npm run lint"